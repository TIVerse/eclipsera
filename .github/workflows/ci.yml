name: CI
permissions:
  contents: read

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  lint:
    name: Lint and Type Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@0ad4b8fadaa221915d270a0f01a286b07aebe09a
      
      - name: Set up Python
        uses: actions/setup-python@f677139bbe7f9c59b41ba40a4c1b868d921f71e4
        with:
          python-version: "3.11"
      
      - name: Cache pip
        uses: actions/cache@ab5e8d050b223aed180799e33166a9e208e51384
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black isort flake8 mypy bandit detect-secrets
          pip install -e ".[dev]"
      
      - name: Check code formatting with black
        run: black --check eclipsera tests
      
      - name: Check import sorting with isort
        run: isort --check-only eclipsera tests
      
      - name: Lint with flake8
        run: |
          flake8 eclipsera tests --count --show-source --statistics --max-line-length=100 --extend-ignore=E203,E501,W503,C901,F401,F541 --max-complexity=15
      
      - name: Type check with mypy
        run: mypy eclipsera --ignore-missing-imports

      - name: Run bandit security linter
        run: bandit -r eclipsera

      - name: Run detect-secrets
        run: |
          if [ -f .secrets.baseline ]; then
            detect-secrets scan --baseline .secrets.baseline
          else
            detect-secrets scan > .secrets.baseline
            echo "Created .secrets.baseline; commit it to ignore existing secrets"
          fi

  test:
    name: Test Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.11", "3.12", "3.13"]
    
    steps:
      - uses: actions/checkout@0ad4b8fadaa221915d270a0f01a286b07aebe09a
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@f677139bbe7f9c59b41ba40a4c1b868d921f71e4
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Cache pip
        uses: actions/cache@ab5e8d050b223aed180799e33166a9e208e51384
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"
      
      - name: Run tests with coverage
        run: |
          pytest --cov=eclipsera --cov-report=xml --cov-report=term-missing -v
      
      - name: Upload coverage to Codecov
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
        uses: codecov/codecov-action@e28ff129e5465c2c0dcc6f003fc735cb6ae0c673
        with:
          files: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  test-extras:
    name: Test with Optional Dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@0ad4b8fadaa221915d270a0f01a286b07aebe09a
      
      - name: Set up Python
        uses: actions/setup-python@f677139bbe7f9c59b41ba40a4c1b868d921f71e4
        with:
          python-version: "3.11"
      
      - name: Install with all extras
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[all,dev]"
      
      - name: Run tests
        run: pytest -v -m "not gpu"

  docs:
    name: Build Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@0ad4b8fadaa221915d270a0f01a286b07aebe09a
      
      - name: Set up Python
        uses: actions/setup-python@f677139bbe7f9c59b41ba40a4c1b868d921f71e4
        with:
          python-version: "3.11"
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"
      
      - name: Build documentation
        run: |
          cd docs
          make html
      
      - name: Check for documentation warnings
        run: |
          cd docs
          make html SPHINXOPTS="-W --keep-going"

  build:
    name: Build Package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@0ad4b8fadaa221915d270a0f01a286b07aebe09a
      
      - name: Set up Python
        uses: actions/setup-python@f677139bbe7f9c59b41ba40a4c1b868d921f71e4
        with:
          python-version: "3.11"
      
      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build twine
      
      - name: Build package
        run: python -m build
      
      - name: Check package
        run: twine check dist/*
      
      - name: Upload artifacts
        uses: actions/upload-artifact@834a144ee995460fba8ed112a2fc961b36a5ec5a
        with:
          name: dist
          path: dist/
