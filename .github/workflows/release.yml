name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write
  id-token: write

jobs:
  build:
    name: Build Distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@0ad4b8fadaa221915d270a0f01a286b07aebe09a
      
      - name: Set up Python
        uses: actions/setup-python@f677139bbe7f9c59b41ba40a4c1b868d921f71e4
        with:
          python-version: "3.12"
      
      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build twine
      
      - name: Build package
        run: python -m build
      
      - name: Check package
        run: twine check dist/*

      - name: Generate SBOM
        uses: anchore/sbom-action@e8d2a6937ece8424a6659b55b6fed65b64f40896
        with:
          image: .
          format: spdx-json
          output-file: dist/sbom.spdx.json

      - name: Upload artifacts
        uses: actions/upload-artifact@65c4c4a1ddee5b72fca983c3450796440202063a
        with:
          name: dist
          path: dist/

  publish:
    name: Publish to PyPI
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/project/eclipsera/
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@65a9edc505f2cd0aa3fc9d2d5b5e0f0b69a4172d
        with:
          name: dist
          path: dist/
      
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@f74065ad2389e35d5e9432c99be657994448b989

      - name: Generate provenance
        uses: slsa-framework/slsa-github-generator@v1.9.0
        with:
          provenance-name: "dist.intoto.jsonl"

  github-release:
    name: Create GitHub Release
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@0ad4b8fadaa221915d270a0f01a286b07aebe09a
      
      - name: Extract version from tag
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      
      - name: Download artifacts
        uses: actions/download-artifact@65a9edc505f2cd0aa3fc9d2d5b5e0f0b69a4172d
        with:
          name: dist
          path: dist/
      
      - name: Generate release notes
        id: notes
        run: |
          VERSION=${{ steps.version.outputs.VERSION }}
          echo "NOTES<<EOF" >> $GITHUB_OUTPUT
          echo "## What's New in v${VERSION}" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          if [ -f CHANGELOG.md ]; then
            sed -n "/## \[${VERSION}\]/,/## \[/p" CHANGELOG.md | sed '$d' >> $GITHUB_OUTPUT
          else
            echo "See full changelog at https://github.com/tiverse/eclipsera/blob/main/CHANGELOG.md" >> $GITHUB_OUTPUT
          fi
          echo "EOF" >> $GITHUB_OUTPUT
      
      - name: Create Release
        uses: softprops/action-gh-release@de2c0298943a6851330898a6386db8c6b0eaae14
        with:
          files: dist/*
          body: ${{ steps.notes.outputs.NOTES }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
